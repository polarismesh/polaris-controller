apiVersion: v1
kind: ConfigMap
metadata:
  name: polaris-sidecar-injector
  namespace: polaris-system
  labels:
    app: sidecar-injector
data:
  values: |-
    {"clusterResources":true,"global":{"proxy":{"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}}}}

  dns-config: |-
    policy: enabled
    alwaysInjectSelector:
      []

    neverInjectSelector:
      [{"matchLabels":{"polarismesh.cn/inject":"disabled"}}]

    template: |
      containers:
      - image: polarismesh/polaris-sidecar:#SIDECAR_VERSION#
        name: polaris-sidecar
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: true
          readOnlyRootFilesystem: false
          runAsGroup: 1337
          runAsNonRoot: false
          runAsUser: 1337
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 200m
            memory: 300Mi
        volumeMounts:
          - mountPath: /root/polaris
            defaultMode: 777
            name: polaris-dir
          - mountPath: /root/log
            defaultMode: 777
            name: polaris-log
      initContainers:
      - name: polaris-sidecar-init
        image: polarismesh/polaris-sidecar-init:#CONTROLLER_VERSION#
        imagePullPolicy: Always
        command: ["./start.sh"]
        env:
        - name: RUN_MODE
          value: DNS
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
          - mountPath: /data/polaris-client-config
            name: polaris-client-config
      volumes:
        - name: polaris-client-config
          emptyDir: {}
        - name: polaris-sidecar-iptables
          configMap:
            defaultMode: 420
            name: polaris-sidecar-iptables
        - name: polaris-dir
          emptyDir: {}
        - name: polaris-log
          emptyDir: {}

  java-agent-config: |-
    policy: enabled
    alwaysInjectSelector:
      []

    neverInjectSelector:
      [{"matchLabels":{"polarismesh.cn/inject":"disabled"}}]

    template: |
      initContainers:
      - name: polaris-javaagent-init
        image: polarismesh/polaris-javaagent-init:#JAVA_AGENT_INIT#
        imagePullPolicy: Always
        env:
          - name: JAVA_AGENT_DIR
            value: /app/lib/.polaris/java_agent
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
          - mountPath: /app/lib/.polaris/java_agent
            name: java-agent-dir
      volumes:
        - name: java-agent-dir
          emptyDir: {}

  mesh-config: |-
    policy: enabled
    alwaysInjectSelector:
      []

    neverInjectSelector:
      [{"matchLabels":{"polarismesh.cn/inject":"disabled"}}]

    template: |
      containers:
      - name: envoy
        image: envoyproxy/envoy:#ENVOY_VERSION#
        imagePullPolicy: Always
        command: ["/usr/local/bin/envoy"]
        args: ["-c", "/etc/envoy/envoy.yaml", "--log-path", "/etc/envoy_logs/envoy.log"]
        resources:
        {{- if or (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPU`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemory`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit`) }}
          {{- if or (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPU`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemory`) }}
            requests:
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPU`) -}}
              cpu: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyCPU` }}"
              {{ end }}
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemory`) -}}
              memory: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyMemory` }}"
              {{ end }}
          {{- end }}
          {{- if or (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit`) (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit`) }}
            limits:
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit`) -}}
              cpu: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyCPULimit` }}"
              {{ end }}
              {{ if (isset .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit`) -}}
              memory: "{{ index .ObjectMeta.Annotations `polarismesh.cn/proxyMemoryLimit` }}"
              {{ end }}
          {{- end }}
        {{- else }}
          {{- if .Values.global.proxy.resources }}
            {{ toYaml .Values.global.proxy.resources | indent 6 }}
          {{- end }}
        {{- end }}
        env:
        - name: ENVOY_UID
          value: "1337"
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-bootstrap
          readOnly: false
        - mountPath: /etc/envoy_logs
          name: envoy-logs
          readOnly: false
        - mountPath: /tmp/polaris-sidecar
          defaultMode: 777
          name: polaris-socket
      - image: polarismesh/polaris-sidecar:#SIDECAR_VERSION#
        name: polaris-sidecar
        securityContext:
          runAsUser: 1337
          runAsGroup: 1337
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
          - mountPath: /root/polaris
            defaultMode: 777
            name: polaris-dir
          - mountPath: /root/log
            defaultMode: 777
            name: polaris-log
          - mountPath: /tmp/polaris-sidecar
            defaultMode: 777
            name: polaris-socket
          {{ if ( openTlsMode .ObjectMeta.Annotations `polarismesh.cn/tls-mode` ) }}
          - name: root-ca
            mountPath: /etc/polaris-sidecar/certs
          {{ end }}
      initContainers:
      - name: polaris-bootstrap-writer
        image: polarismesh/polaris-envoy-bootstrap-generator:#CONTROLLER_VERSION#
        imagePullPolicy: Always
        env:
        - name: METADATA
          value: {{index .ObjectMeta.Annotations `sidecar.polarismesh.cn/envoyMetadata`}}
        {{if ( openTlsMode .ObjectMeta.Annotations `polarismesh.cn/tls-mode` ) }}
        - name: TLS_MODE
          value: {{index .ObjectMeta.Annotations `polarismesh.cn/tls-mode`}}
        {{end}}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POLARIS_SERVER_URL
          value: {{.ProxyConfig.ProxyMetadata.serverAddress}}:15010
        - name: POLARIS_SERVER_HOST
          value: {{.ProxyConfig.ProxyMetadata.serverAddress}}
        - name: POLARIS_SERVER_PORT
          value: 15010
        - name: CLUSTER_NAME
          value: {{.ProxyConfig.ProxyMetadata.clusterName}}
        - name: OPEN_DEMAND
          value: {{.ProxyConfig.ProxyMetadata.openDemand}}
        volumeMounts:
          - mountPath: /var/lib/data
            name: envoy-bootstrap
          - mountPath: /data/polaris-client-config
            name: polaris-client-config
      - name: polaris-sidecar-init
        image: polarismesh/polaris-sidecar-init:#CONTROLLER_VERSION#
        imagePullPolicy: Always
        command: ["./start.sh"]
        env:
        - name: RUN_MODE
          value: MESH
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
          - mountPath: /data/polaris-client-config
            name: polaris-client-config
      volumes:
        - name: sds
          emptyDir: {}
        {{ if ( openTlsMode .ObjectMeta.Annotations `polarismesh.cn/tls-mode` ) }}
        - name: root-ca
          secret: 
            secretName: polaris-sidecar-secret
            items:
            - key: root-cert
              path: rootca.pem
        {{ end }}
        - name: polaris-client-config
          emptyDir: {}
        - name: envoy-bootstrap
          emptyDir: {}
        - name: envoy-logs
          emptyDir: {}
        - name: polaris-dir
          emptyDir: {}
        - name: polaris-log
          emptyDir: {}
        - name: polaris-socket
          emptyDir: {}
